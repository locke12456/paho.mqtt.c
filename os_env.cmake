if( ARM )
	message("Configuring for ARM")
	
        add_definitions("-DLINUX -DLINUX32 ")
	set(LIBS_PATH ${CMAKE_SOURCE_DIR}/libraries/lib/arm)
else()
if(WIN32)
    if(CMAKE_SIZEOF_VOID_P EQUAL 8)
        SET(ARCH "WIN64")
    else(CMAKE_SIZEOF_VOID_P EQUAL 8)
        SET(ARCH "WIN32")
    endif(CMAKE_SIZEOF_VOID_P EQUAL 8)
endif(WIN32)

if(UNIX)
    if(CMAKE_SIZEOF_VOID_P EQUAL 8)
        SET(ARCH "UNIX64")
    else(CMAKE_SIZEOF_VOID_P EQUAL 8)
        SET(ARCH "UNIX32")
    endif(CMAKE_SIZEOF_VOID_P EQUAL 8)
endif(UNIX)

# Set library path for corressponding platform
if(${ARCH} STREQUAL "WIN32")
    message("Configuring for Windows 32 bit")
    add_definitions("-DWIN -DWIN32 -D_WIN32 ")
	set(LIBS_PATH ${CMAKE_SOURCE_DIR}/libraries/lib/win32)
else()
    if(${ARCH} STREQUAL "WIN64")
        message("Configuring for Windows 64 bit")
        add_definitions("-DWIN -DWIN64 ")
		set(LIBS_PATH ${CMAKE_SOURCE_DIR}/libraries/lib/win64)
    else()
        if(${ARCH} STREQUAL "UNIX32")
            message("Configuring for Linux 32 bit")
            add_definitions("-DLINUX -DLINUX32 ")
			set(LIBS_PATH ${CMAKE_SOURCE_DIR}/libraries/lib/linux32)
        else()
            if(${ARCH} STREQUAL "UNIX64")
                message("Configuring for Linux 64 bit")
                add_definitions("-DLINUX -DLINUX64 ")
				set(LIBS_PATH ${CMAKE_SOURCE_DIR}/libraries/lib/linux64)
            endif()
        endif()
    endif()
endif()


endif(ARM)
MESSAGE(${LIBS_PATH})
